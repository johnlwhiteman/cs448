#!/usr/bin/env bash
export DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" )" && pwd)"
source ${DIR}/libSetup

function setupChrome {
    sudo apt --fix-broken install -y
    sudo apt-get install gdebi-core -y
    sudo apt --fix-broken install -y
    cd /tmp
    rm -f /google-chrome-stable_current_amd64.deb
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i google-chrome-stable_current_amd64.deb
    rm -f google-chrome-stable_current_amd64.deb
    sudo apt --fix-broken install -y
}

function setupDependencies {
    sudo apt-get update
    sudo apt-get install build-essential -y
    sudo apt-get install bzip2 -y
    sudo apt-get install cloc -y
    sudo apt-get install curl -y
    sudo apt-get install eog -y
    sudo apt-get install gedit -y
    sudo apt-get install gnuplot -y
    sudo apt-get install imagemagick -y
    sudo apt-get install net-tools -y
    sudo apt-get install npm -y
    sudo apt-get install retext -y
    sudo apt-get install wget -y
    setupChrome
    setupDocker
    setupGit
    setupVim
    sudo apt-get autoremove -y
    sudo apt --fix-broken install -y
}

function setupDocker {
    sudo apt --fix-broken install -y
    sudo rm -f /usr/bin/docker-compose
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add 
    sudo bash -c  "echo 'deb [arch=amd64] https://download.docker.com/linux/debian buster stable' > /etc/apt/sources.list.d/docker.list"
    sudo apt-key fingerprint 0EBFCD88
    sudo apt-get update
    sudo apt-get remove docker docker-engine docker.io containerd runc -y
    sudo apt-get update
    sudo apt-get install apt-transport-https ca-certificates gnupg-agent software-properties-common -y  
    sudo apt-get install docker-ce docker-ce-cli containerd.io -y
    sudo docker run hello-world
    sudo docker run hello-world
    sudo systemctl stop docker
    sudo systemctl enable docker
    sudo systemctl start docker
    sudo curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
    docker --version
    docker-compose --version
}

function setupGit {
    git config --global user.name "John L. Whiteman" 
    git config --global user.email "<>"
    git config --global core.editor vim
}

function setupOs {
    pathy=~/.bashrc
    backupFile "$pathy"
    tmpy="export PATH=${DIR}:\$PATH"
    grep -qF "$tmpy" "$pathy" || echo "$tmpy" >> "$pathy"
    echo -e '[com.canonical.unity-greeter]\nplay-ready-sound = false' \
    | sudo tee -a /usr/share/glib-2.0/schemas/50_unity-greeter.gschema.override
    sudo glib-compile-schemas /usr/share/glib-2.0/schemas/
    pathy=/etc/inputrc
    tmpy="set bell-style none"
    sudo sed -i 's/# set bell-style none/set bell-style none/' $pathy
    pathy=~/.inputrc
    touch $pathy
    grep -qF "$tmpy" "$pathy" || echo "$tmpy" >> "$pathy"
    pathy=~/.bash_profile
    tmpy="setterm -blength 0"
    touch $pathy
    grep -qF "$tmpy" "$pathy" || echo "$tmpy" >> "$pathy"
    ulimit -c unlimited
}

function setupVim {
    cat << EOF > /tmp/VIMRC
filetype plugin indent off
set tabstop=4
set shiftwidth=4
set expandtab
set vb t_vb=
syntax on
colorscheme default 
autocmd FileType make setlocal ts=4 sts=4 sw=4 noexpandtab
autocmd FileType c setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType cpp setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType html setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType java setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType javascript setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType json setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType php setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType python setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType c,cpp,html,java,javascript,json,php,python,yaml autocmd BufWritePre <buffer> %s/\s\+$//e
EOF
    mv /tmp/VIMRC ~/.vimrc
}

sudo ls >/dev/null
setupOs
setupDependencies
